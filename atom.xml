<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>CODEHolic</title>
 <link href="http://codeholic.net/atom.xml" rel="self"/>
 <link href="http://codeholic.net"/>
 <updated>2012-12-10T23:58:32+09:00</updated>
 <id>http://codeholic.net</id>
 <author>
   <name>Chan Shik Lim</name>
   <email></email>
 </author>

 
 <entry>
   <title>Mac Mail with GMail IMAP</title>
   <link href="http://codeholic.net/Application/2012/12/10/mac-mail-with-gmail-imap"/>
   <updated>2012-12-10T00:00:00+09:00</updated>
   <id>http://codeholic.net/Application/2012/12/10/mac-mail-with-gmail-imap</id>
   <content type="html">&lt;h3&gt;문제점&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;파일을 지워도 계속 다시 나타남&lt;/li&gt;
&lt;li&gt;GMail 에서 제공해주는 IMAP 에서는 파일을 지워도 &lt;strong&gt;전체 보관함&lt;/strong&gt;에 남아있기 때문&lt;/li&gt;
&lt;li&gt;로컬에서 아무리 지워도 동기화하는 과정에서 다시 메일을 받아옴 - 지워도 다시 나타나는 원인&lt;/li&gt;
&lt;/ul&gt;


&lt;h3&gt;해결 방법&lt;/h3&gt;

&lt;pre&gt;&lt;code&gt;Preferences - Accounts - Mail behaviors
Trash &amp;gt; Check &quot;Store deleted messages on the server&quot; 
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;일반적으로는 위에 항목을 선택해두지 않는다.
왜냐하면 로컬에서 지운 메시지를 서버에 굳이 남겨둘 필요가 없기 때문이다.&lt;/p&gt;

&lt;p&gt;하지만, GMail 에서는 메일을 지우지 않고 전체보관함에 계속 저장해둔다.
그러므로 로컬에서 지운 메일을 서버에 따로 보관해두도록 설정한다.&lt;/p&gt;

&lt;p&gt;로컬에서 메일을 지우면 GMail 서버에서는 &lt;strong&gt;deleted-messages&lt;/strong&gt; 라는
라벨을 가진 메일함에 &lt;strong&gt;삭제한 메일&lt;/strong&gt;을 따로 모아둔다.&lt;/p&gt;

&lt;p&gt;정말 메일을 삭제하고 싶다면, GMail 에 웹 혹은 앱을 통해 접속한 다음
&lt;strong&gt;deleted-messages&lt;/strong&gt; 메일함에 있는 모든 메일을 삭제한다.&lt;/p&gt;

&lt;p&gt;로컬 휴지통 (Trashes) 안에 남아있는 메일까지 삭제한다. (보통은 일정 시간 후에 삭제됨)&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>GitLabHQ Installation</title>
   <link href="http://codeholic.net/Application/2012/12/07/gitlabhq-installation"/>
   <updated>2012-12-07T00:00:00+09:00</updated>
   <id>http://codeholic.net/Application/2012/12/07/gitlabhq-installation</id>
   <content type="html">&lt;h2&gt;CentOS 환경에서 GitLab 설치&lt;/h2&gt;

&lt;h3&gt;기본적인 설치&lt;/h3&gt;

&lt;p&gt;GitLab 설치 문서와 CentOS 6 환경에서 GitLab 설치하는 방법을 다룬 아래 사이트를  참조하여 설치를 진행하자.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gitlabhq/gitlabhq/blob/stable/doc/install/installation.md&quot;&gt;GitLab Installation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/1601228&quot;&gt;https://gist.github.com/1601228&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dlaxar.blogspot.co.at/2012/06/installing-gitlab-with-gitolite-on.html&quot;&gt;http://dlaxar.blogspot.co.at/2012/06/installing-gitlab-with-gitolite-on.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;여기에서는 CentOS 5 환경에서 설치를 진행할 때 발생하는 문제점과 위에서 언급되지 않은 오류가 발생하였을 때, 어떻게 해결할지에 대해서 다룬다.&lt;/p&gt;

&lt;h3&gt;Python 2.7 설치&lt;/h3&gt;

&lt;p&gt;CentOS 5 에는 기본적으로 Python 2.4 버전이 설치되어 있고, 2.6 버전을 패키지로 설치할 수 있다.
또한, yum 스크립트에서 2.4 버전에 대한 의존성을 가지고 있다.&lt;/p&gt;

&lt;p&gt;GitLab 을 설치하기 전에 Python 버전을 2.7로 올리고 진행을 하자.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codingwithcody.com/2012/01/python-2-7-on-centos-5-6/&quot;&gt;Python 2.7 on CentOS 5-6&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;위 사이트에서 Python 2.7을 한번에 설치해주는 스크립트를 얻을 수 있다.&lt;/p&gt;

&lt;p&gt;install.sh&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;yum -y install gcc gdbm-devel readline-devel ncurses-devel zlib-devel bzip2-devel sqlite-devel db4-devel openssl-devel tk-devel bluez-libs-devel make
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/tmp

wget http://sqlite.org/sqlite-amalgamation-3.7.3.tar.gz
tar xfz sqlite-amalgamation-3.7.3.tar.gz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;sqlite-3.7.3/
./configure
make
make install

&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/tmp
wget http://www.python.org/ftp/python/2.7.1/Python-2.7.1.tgz
tar xvfz Python-2.7.1.tgz
&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;Python-2.7.1
./configure --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/python2.7.1 --with-threads --enable-shared
make
make install
 
touch /etc/ld.so.conf.d/opt-python2.7.1.conf
&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&amp;quot;/opt/python2.7.1/lib/&amp;quot;&lt;/span&gt; &amp;gt;&amp;gt; /etc/ld.so.conf.d/opt-python2.7.1.conf
ldconfig
 
ln -sf /opt/python2.7.1/bin/python /usr/bin/python2.7
 
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /var/tmp
wget http://pypi.python.org/packages/2.7/s/setuptools/setuptools-0.6c11-py2.7.egg
sh setuptools-0.6c11-py2.7.egg --prefix&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/opt/python2.7.1
 
/opt/python2.7.1/bin/easy_install pip
ln -sf /opt/python2.7.1/bin/pip /usr/bin/pip
 
pip install virtualenv
ln -sf /opt/python2.7.1/bin/virtualenv /usr/bin/virtualenv
 
mv /usr/bin/python /usr/bin/python-backup
ln -s /usr/bin/python2.7 /usr/bin/python
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;위 코드를 install.sh 에 저장하고 루트 권한으로 실행하면
/usr/bin/python2.7 명령어를 통해 2.7 버전 Python을 실행할 수 있다.&lt;/p&gt;

&lt;p&gt;2.7 버전을 기본 Python 명령어로 지정하자.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ sudo ln -s /usr/bin/python2.7 /usr/bin/python
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;마지막으로 2.4 버전에 대한 의존성을 가지고 있는 yum 스크립트를 열어
가장 첫 줄을 아래와 같이 수정한다.&lt;/p&gt;

&lt;pre&gt;
#!/usr/bin/python2.4
&lt;/pre&gt;


&lt;h3&gt;charlock_holmes 설치 중에 -licui18n 오류 발생시&lt;/h3&gt;

&lt;pre&gt;
$ sudo gem install charlock_holmes

...
checking for main() in -licui18n... no
...
&lt;/pre&gt;


&lt;p&gt;위와 같은 오류가 발생할 경우에는 libicu-devel 패키지를 설치한다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ sudo yum install libicu-devel
&lt;/code&gt;&lt;/p&gt;

&lt;h3&gt;git 와 gitlab 계정&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;gitolite 프로그램은 git 계정에서 실행하여, &lt;strong&gt;git clone&lt;/strong&gt; 등 git 명령어를 처리하는 역할을 한다.&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;gitlab 계정은 웹을 통해 SSH 비밀키를 등록할 수 있게 해주는 기능을 제공한다.&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;설치 과정 중에 git / gitlab 계정을 서로 자신이 속한 그룹에 포함시키는 과정이 있다. git / gitlab 계정에서 서로 상대방 계정에 속해있는 파일에 접근할 수 있도록 해주는 작업인데, 이를 통해 웹과 Shell 계정을 연동할 수 있다.&lt;/p&gt;

&lt;p&gt;GitLab 웹을 통해 추가한 SSH 비밀키를 git 계정 안에 있는 .ssh/authorized_keys 파일에 추가하여 키 기반 인증을 진행할 수 있도록 한다.&lt;/p&gt;

&lt;h3&gt;통지에 사용할 E-Mail (GMail 사용시) 등록&lt;/h3&gt;

&lt;p&gt;&lt;code&gt;
$ vi /home/gitlab/gitlab/config/environments/production.rb
&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;아래 내용을 추가한다.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;ruby&quot;&gt;  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_mailer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;delivery_method&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:smtp&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_mailer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;smtp_settings&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:address&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;smtp.gmail.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:port&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;587&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:domain&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;domain.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:authentication&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;ss&quot;&gt;:plain&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:user_name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;account@domain.com&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:password&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&amp;#39;password&amp;#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;ss&quot;&gt;:enable_starttls_auto&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_mailer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;perform_deliveries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;config&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;action_mailer&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;raise_delivery_errors&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kp&quot;&gt;true&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h3&gt;메일이 발송되지 않을 경우에 resque 재시작&lt;/h3&gt;

&lt;p&gt;메일에 관련된 설정을 변경하면 resque 프로세스를 다시 시작하여 바뀐 설정을 적용한다.&lt;/p&gt;

&lt;pre&gt;
$ ps ax | grep resque
 8409 pts/0    R+     0:00 grep resque
30293 ?        Sl     0:16 resque-1.23.0: Paused

$ sudo kill -9 30293

$ sudo -u gitlab sh -l -c &quot;cd /home/gitlab/gitlab &gt; /dev/null 2&gt;&amp;1 &amp;&amp; ./resque.sh&quot;
&lt;/pre&gt;


&lt;h3&gt;SSL 설정&lt;/h3&gt;

&lt;p&gt;발급 받은 SSL 키를 이용해 HTTPS로 접속할 수 있게 설정하자.&lt;/p&gt;

&lt;p&gt;우선 HTTP(80)를 통해 들어온 연결을 HTTPS(443) 포트로 돌리도록 설정한다.&lt;/p&gt;

&lt;p&gt;&lt;code&gt;
$ sudo vi /etc/nginx/nginx.conf
&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nginx&quot;&gt;    &lt;span class=&quot;k&quot;&gt;..&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt;       &lt;span class=&quot;mi&quot;&gt;80&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;domain.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

       &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
           &lt;span class=&quot;kn&quot;&gt;rewrite&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;https://domain.com&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;permanent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
       &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;..&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;p&gt;HTTPS 접속을 처리할 server를 추가한다.&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;nginx&quot;&gt;&lt;span class=&quot;k&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;listen&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;443&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;server_name&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;domain.com&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;root&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/home/gitlab/gitlab/public&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# individual nginx logs for this gitlab vhost&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;access_log&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/var/log/nginx/gitlab_access.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;error_log&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;/var/log/nginx/gitlab_error.log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

        &lt;span class=&quot;kn&quot;&gt;ssl&lt;/span&gt;                  &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#ssl_certificate      cert.pem;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#ssl_certificate_key  cert.key;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;ssl_certificate&lt;/span&gt;      &lt;span class=&quot;s&quot;&gt;/var/ssl/ssl_certificate.crt/&lt;/span&gt;
        &lt;span class=&quot;s&quot;&gt;ssl_certificate_key&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;/var/ssl/ssl_certificate_key/&lt;/span&gt;

        &lt;span class=&quot;s&quot;&gt;ssl_session_timeout&lt;/span&gt;  &lt;span class=&quot;mi&quot;&gt;5m&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;ssl_protocols&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;SSLv2&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;SSLv3&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;TLSv1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;ssl_ciphers&lt;/span&gt;  &lt;span class=&quot;s&quot;&gt;HIGH:!aNULL:!MD5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kn&quot;&gt;ssl_prefer_server_ciphers&lt;/span&gt;   &lt;span class=&quot;no&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;


  &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;/&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# serve static files from defined root folder;.&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;# @gitlab is a named location for the upstream fallback, see below&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;try_files&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri/index.html&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$uri.html&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@gitlab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

  &lt;span class=&quot;c1&quot;&gt;# if a file, which is not found in the root folder is requested,&lt;/span&gt;
  &lt;span class=&quot;c1&quot;&gt;# then the proxy pass the request to the upsteam (gitlab unicorn)&lt;/span&gt;
  &lt;span class=&quot;kn&quot;&gt;location&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;@gitlab&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;proxy_read_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;proxy_connect_timeout&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;300&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;proxy_redirect&lt;/span&gt;     &lt;span class=&quot;no&quot;&gt;off&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;X-Forwarded-Proto&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$scheme&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;Host&lt;/span&gt;              &lt;span class=&quot;nv&quot;&gt;$http_host&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kn&quot;&gt;proxy_set_header&lt;/span&gt;   &lt;span class=&quot;s&quot;&gt;X-Real-IP&lt;/span&gt;         &lt;span class=&quot;nv&quot;&gt;$remote_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

    &lt;span class=&quot;kn&quot;&gt;proxy_pass&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;http://gitlab&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;


&lt;h2&gt;참고 문서&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gitlabhq/gitlabhq/blob/stable/doc/install/installation.md&quot;&gt;GitLab Installation&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://devday.tistory.com/entry/icu-required-brew-install-icu4c-or-aptget-install-libicudev&quot;&gt;icu required (brew install icu4c or apt-get install libicu-dev&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://stackoverflow.com/questions/10690255/gitlab-email-setup&quot;&gt;GitLab email setup&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/gitlabhq/gitlabhq/issues/1068&quot;&gt;Notification emails not sent&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://gist.github.com/1601228&quot;&gt;https://gist.github.com/1601228&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://dlaxar.blogspot.co.at/2012/06/installing-gitlab-with-gitolite-on.html&quot;&gt;Installing gitlab with gitolite on&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://www.codingwithcody.com/2012/01/python-2-7-on-centos-5-6/&quot;&gt;Python 2.7 on CentOS 5-6&lt;/a&gt;&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>Using AirVideo on Windows / Mac</title>
   <link href="http://codeholic.net/Tips/2012/12/06/using-airvideo-on-windows--mac"/>
   <updated>2012-12-06T00:00:00+09:00</updated>
   <id>http://codeholic.net/Tips/2012/12/06/using-airvideo-on-windows--mac</id>
   <content type="html">&lt;p&gt;AirVideo 제작사에서는 데스크탑 운영체제용 AirVideo 플레이어를 제공하고 있지 않다.
동영상 스트리밍을 위한 다양한 솔루션들이 있겠지만, 이미 AirVideo 서버를 운영하고 있다면 이를 최대한 활용해보자.&lt;/p&gt;

&lt;h3&gt;Windows&lt;/h3&gt;

&lt;p&gt;다운로드: &lt;a href=&quot;http://dl.dropbox.com/u/10205542/AirVideoClient_win32_20111218.zip&quot;&gt;http://dl.dropbox.com/u/10205542/AirVideoClient_win32_20111218.zip&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Media Player 혹은 QuickTime Player 를 이용해 동영상을 재생한다.
다른 재생 프로그램을 사용하려면 동영상 파일 URL을 복사해 붙이면 된다.&lt;/p&gt;

&lt;h3&gt;Mac OS X&lt;/h3&gt;

&lt;p&gt;다운로드: &lt;a href=&quot;http://dl.dropbox.com/u/6713110/MacAirVideoClient/Site/Home.html&quot;&gt;http://dl.dropbox.com/u/6713110/MacAirVideoClient/Site/Home.html&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;VLC Player를 이용해 동영상을 재생한다.
서버 주소를 등록하고 동영상 파일을 선택하면, VLC 가 실행되어 동영상을 재생한다.&lt;/p&gt;
</content>
 </entry>
 
 <entry>
   <title>QuickLook Plugins</title>
   <link href="http://codeholic.net/Tips/2012/12/05/quicklook-plugins"/>
   <updated>2012-12-05T00:00:00+09:00</updated>
   <id>http://codeholic.net/Tips/2012/12/05/quicklook-plugins</id>
   <content type="html">&lt;h2&gt;압축 파일&lt;/h2&gt;

&lt;hr /&gt;

&lt;h3&gt;BetterZip&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Zip 파일 미리 보기&lt;/p&gt;

&lt;p&gt;  &lt;a href=&quot;http://macitbetter.com/BetterZip-Quick-Look-Generator/&quot;&gt;http://macitbetter.com/BetterZip-Quick-Look-Generator/&lt;/a&gt;&lt;/p&gt;&lt;/li&gt;
&lt;li&gt;&lt;p&gt;실행 후 바로 적용 시키기 위해 아래 명령 입력&lt;/p&gt;

&lt;p&gt;  &lt;code&gt;
  $ qlmanage -r
 &lt;/code&gt;&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;


&lt;h2&gt;Markdown&lt;/h2&gt;

&lt;hr /&gt;

&lt;h3&gt;QLMarkdown&lt;/h3&gt;

&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Markdown 문법으로 작성된 문서 미리 보기&lt;/p&gt;

&lt;p&gt;  https://github.com/toland/qlmarkdown&lt;/p&gt;&lt;/li&gt;
&lt;/ul&gt;

</content>
 </entry>
 
 
</feed>